library(RMAS)
require(usethis)
install.packages(jsonlite)
install.packages("jsonlite")
require(jsonlite)
devtools::load_all(".")
read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
case_1_config <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
devtools::load_all(".")
case_1_data <- read_data("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_data.json")
View(case_1_data)
write_config(case_1_config, "test.json")
devtools::load_all(".")
write_config(case_1_config, "test.json")
devtools::load_all(".")
write_config(case_1_config, "test.json")
devtools::load_all(".")
write_config(case_1_config, "test.json")
flatten(case_1_config)
devtools::load_all(".")
write_config(case_1_config, "test.json")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
str(config_list)
str(case_1_config)
roomba(case_1_config)
roomba::roomba(case_1_config)
install.packages("C:/Users/chris/Documents/GitHub/roomba_0.1.0.tar.gz", repos = NULL, type = "source")
roomba::roomba(case_1_config)
roomba::roomba(case_1_config, cols="parameters")
roomba::roomba(case_1_config, cols="analyst")
roomba::roomba(case_1_config, cols="study_name")
devtools::load_all(".")
devtools::load_all(".")
case_1_config <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
str(case_1_config$analyst)
devtools::load_all(".")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
devtools::load_all(".")
case_1_config <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
case_1_config
case_1_config <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
case_1_config$analyst
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
case_1_config$selectivity
case_1_config$likelihood_component
case_1_config$growth
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
case_1_config$recruitment$id
case_1_config$recruitment$parameters
case_1_config$recruitment.1$parameters
case_1_config$`recruitment.1`$parameters
names(case_1_config)
?write_config
?toJSON
toJSON
?asJSON
asJSON
deparse_vector(cleannames(names(case_1_config), no_dots = no_dots))
cleannames(names(case_1_config), no_dots = no_dots)
make.unique(case_1_config)
make.unique(names(case_1_config))
a <- list("a"=1, "a"=2)
toJSON(a)
devtools::load_all("C:\\Users\\chris\\Documents\\GitHub\\jsonlite")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
?toJSON
source('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
no_dots
devtools::load_all(".")
source('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
no_dots
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
source('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
debugSource('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
source('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
source('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
source('C:/Users/chris/Documents/GitHub/jsonlite/R/asJSON.list.R')
source('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
source('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
source('C:/Users/chris/Documents/GitHub/jsonlite/R/cleannames.R')
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
names(case_1_config)
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
case_1_test <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
names(case_1_test)
names(case_1_config)
devtools::load_all(".")
case_1_config <- read_config("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_config.json")
case_1_data <- read_data("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_data.json")
write_config(case_1_config, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\test.json")
devtools::load_all(".")
case_1_data <- read_data("C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\mas_case_1_data.json")
write_data(case_1_data, "C:\\Users\\chris\\Documents\\GitHub\\MAS\\Tests\\CaseStudy1\\data_test.json")
names(case_1_config)
unique(names(case_1_config))
case_1_config$likelihood_component
r4ss::SS_parlines("C:\\Users\\chris\\Documents\\StockAssessment\\hake_noageerr")
r4ss::SS_parlines("C:\\Users\\chris\\Documents\\StockAssessment\\hake_noageerr")
hakepars<- r4ss::SS_parlines("C:\\Users\\chris\\Documents\\StockAssessment\\hake_noageerr\\2018hake_control.ss")
hakepars$Label
names(hakepars)
case_1_config$growth
hakepars$Label
case_1_config$recruitment
hakepars$Label
case_1_config$natural_mortality
case_1_config$selectivity
hakepars$Label
devtools::load_all(".")
case_1_config$likelihood_component
case_1_config$population
hakepars$Label
name_map(hakepars$Label)
apply(hakepars$Label, name_map)
apply(hakepars$Label, FUN=name_map)
hakepars$Label
?apply
lapply(hakepars$Label, name_map)
lapply(hakepars$Label, name_map, toMAS=TRUE)
